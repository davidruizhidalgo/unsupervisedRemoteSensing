%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%% ARCHIVO DE PRUEBA %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% ENVI
% description = {
%   AVIRIS orthocorrected file, pixel size =       16.2000
%   rotation angle =      -28.0000
%   datum = WGS-84
%   UTM zone =           10
%   upper left corner (1,1) (Easting) =        459433.60
%   upper left corner (1,1) (Northing) =        4316447.3}
% samples = 1219 %The number of samples (pixels) per image line for each band.
% lines = 18385 %The number of lines per image for each band.
% bands = 224
% header offset = 0
% file type = ENVI Standard
% data type = 2 %Integer: 16-bit signed integer
% interleave = bip
% byte order = 0
% map info = { UTM , 1 , 1 , 459433.600 , 4316447.300 , 16.200 , 16.200 , 10 , North , WGS-84 , units=Meters , rotation=28.0000 }
% wavelength units = Nanometers
% correction factors = { 1.0 , 1.48795 , 1.18484 , 1.08264 , 1.10059 , 1.08712 , 1.0534 , 0.99914 , 0.98411 , 0.99055 , 0.96899 , 0.98119 , 0.9779 , 0.97234 , 0.97569 , 0.99034 , 0.9763 , 0.99505 , 0.97796 , 0.97941 , 0.98807 , 1.00935 , 1.01396 , 0.99738 , 0.99676 , 1.00523 , 1.00315 , 1.00935 , 0.99804 , 0.98174 , 0.97062 , 0.97184 , 0.97471 , 0.97 , 0.96609 , 0.98378 , 0.95773 , 0.96375 , 0.96824 , 0.96612 , 0.96821 , 0.96969 , 0.96337 , 0.97993 , 0.99179 , 0.97111 , 0.97044 , 0.97404 , 0.95925 , 0.97533 , 0.98715 , 0.98588 , 0.97544 , 0.98976 , 0.99377 , 0.99856 , 0.98519 , 0.96881 , 0.99358 , 1.02872 , 0.91297 , 0.9001 , 0.99591 , 0.94588 , 0.94293 , 0.97807 , 0.98202 , 1.00338 , 1.00677 , 0.99717 , 0.99685 , 1.00117 , 1.00315 , 1.01651 , 1.03591 , 1.0312 , 1.04239 , 1.03661 , 1.02802 , 1.03537 , 1.06811 , 1.06753 , 1.0755 , 1.04288 , 1.02548 , 1.02771 , 1.03101 , 1.04264 , 1.04251 , 1.05216 , 1.0463 , 1.04944 , 1.04886 , 1.06163 , 1.09178 , 1.16555 , 1.09335 , 1.16115 , 1.13904 , 1.06869 , 1.02172 , 0.99989 , 0.99113 , 0.96738 , 0.97361 , 0.91701 , 0.74135 , 1.0 , 1.0 , 1.0 , 1.0 , 0.8936 , 0.91561 , 0.93306 , 0.97002 , 1.01356 , 1.01148 , 0.96647 , 0.98162 , 0.97292 , 0.98628 , 0.99469 , 0.9857 , 0.98822 , 0.9882 , 0.98987 , 0.99336 , 1.00589 , 1.0191 , 1.0291 , 1.01976 , 1.0115 , 1.01044 , 1.00301 , 0.99861 , 1.00277 , 1.0 , 0.9908 , 1.00091 , 0.98824 , 0.99097 , 0.98604 , 0.98813 , 0.97967 , 0.99021 , 0.9702 , 0.9766 , 0.97325 , 0.9801 , 0.97397 , 0.9465 , 0.93602 , 0.92896 , 1.07618 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.21914 , 0.99141 , 1.02325 , 1.02653 , 1.00737 , 1.02748 , 1.01421 , 0.99865 , 0.97462 , 1.10852 , 1.05873 , 1.019 , 0.99741 , 0.99087 , 1.00796 , 0.9956 , 0.99633 , 0.98572 , 0.97447 , 1.00338 , 0.99373 , 0.99042 , 0.99813 , 1.00053 , 1.0091 , 1.01151 , 1.00881 , 1.03278 , 1.01554 , 1.01478 , 0.97808 , 0.99077 , 0.99105 , 0.98934 , 0.9912 , 1.00364 , 0.99589 , 0.99988 , 1.01212 , 1.01003 , 1.00675 , 0.99956 , 1.0095 , 1.0276 , 1.03735 , 1.01819 , 1.02875 , 1.01389 , 1.02803 , 1.00712 , 1.04055 , 1.05611 , 1.07727 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 }
% wavelength = { 365.9136593 , 375.5776593 , 385.2466593 , 394.9196593 , 404.5966593 , 414.2786593 , 423.9646593 , 433.6546593 , 443.3496593 , 453.0496593 , 462.7526593 , 472.4606593 , 482.1736593 , 491.8906593 , 501.6116593 , 511.3376593 , 521.0676593 , 530.8016593 , 540.5406593 , 550.2836593 , 560.0316593 , 569.7836593 , 579.5396593 , 589.3006593 , 599.0656593 , 608.8356593 , 618.6086593 , 628.3876593 , 638.1696593 , 647.9576593 , 657.7486593 , 667.5446593 , 655.4756593 , 665.2826593 , 675.0846593 , 684.8816593 , 694.6726593 , 704.4596593 , 714.2406593 , 724.0166593 , 733.7866593 , 743.5526593 , 753.3126593 , 763.0676593 , 772.8166593 , 782.5616593 , 792.3006593 , 802.0356593 , 811.7646593 , 821.4876593 , 831.2066593 , 840.9196593 , 850.6276593 , 860.3306593 , 870.0286593 , 879.7206593 , 889.4076593 , 899.0906593 , 908.7666593 , 918.4386593 , 928.1046593 , 937.7666593 , 947.4226593 , 957.0726593 , 966.7186593 , 976.3586593 , 985.9946593 , 995.6246593 , 1005.2536593 , 1014.8636593 , 1024.4836593 , 1034.0936593 , 1043.6936593 , 1053.2936593 , 1062.8836593 , 1072.4736593 , 1082.0636593 , 1091.6336593 , 1101.2136593 , 1110.7736593 , 1120.3436593 , 1129.8936593 , 1139.4436593 , 1148.9936593 , 1158.5336593 , 1168.0736593 , 1177.6036593 , 1187.1336593 , 1196.6536593 , 1206.1636593 , 1215.6736593 , 1225.1836593 , 1234.6836593 , 1244.1736593 , 1253.6636593 , 1263.1436593 , 1253.3536593 , 1263.3336593 , 1273.3036593 , 1283.2736593 , 1293.2436593 , 1303.2136593 , 1313.1936593 , 1323.1636593 , 1333.1336593 , 1343.1036593 , 1353.0736593 , 1363.0436593 , 1373.0136593 , 1382.9836593 , 1392.9536593 , 1402.9236593 , 1412.8936593 , 1422.8636593 , 1432.8336593 , 1442.7936593 , 1452.7636593 , 1462.7336593 , 1472.7036593 , 1482.6636593 , 1492.6336593 , 1502.6036593 , 1512.5736593 , 1522.5336593 , 1532.5036593 , 1542.4636593 , 1552.4336593 , 1562.4036593 , 1572.3636593 , 1582.3336593 , 1592.2936593 , 1602.2636593 , 1612.2236593 , 1622.1836593 , 1632.1536593 , 1642.1136593 , 1652.0736593 , 1662.0436593 , 1672.0036593 , 1681.9636593 , 1691.9336593 , 1701.8936593 , 1711.8536593 , 1721.8136593 , 1731.7736593 , 1741.7336593 , 1751.6936593 , 1761.6636593 , 1771.6236593 , 1781.5836593 , 1791.5436593 , 1801.5036593 , 1811.4536593 , 1821.4136593 , 1831.3736593 , 1841.3336593 , 1851.2936593 , 1861.2536593 , 1871.2136593 , 1872.3636593 , 1866.8436593 , 1876.9136593 , 1886.9636593 , 1897.0236593 , 1907.0836593 , 1917.1336593 , 1927.1836593 , 1937.2336593 , 1947.2736593 , 1957.3136593 , 1967.3636593 , 1977.3936593 , 1987.4336593 , 1997.4636593 , 2007.5036593 , 2017.5236593 , 2027.5536593 , 2037.5836593 , 2047.6036593 , 2057.6236593 , 2067.6436593 , 2077.6536593 , 2087.6636593 , 2097.6836593 , 2107.6836593 , 2117.6936593 , 2127.6936593 , 2137.7036593 , 2147.6936593 , 2157.6936593 , 2167.6936593 , 2177.6836593 , 2187.6736593 , 2197.6636593 , 2207.6436593 , 2217.6336593 , 2227.6136593 , 2237.5836593 , 2247.5636593 , 2257.5336593 , 2267.5136593 , 2277.4836593 , 2287.4436593 , 2297.4136593 , 2307.3736593 , 2317.3336593 , 2327.2936593 , 2337.2436593 , 2347.2036593 , 2357.1536593 , 2367.0936593 , 2377.0436593 , 2386.9936593 , 2396.9336593 , 2406.8736593 , 2416.8036593 , 2426.7436593 , 2436.6736593 , 2446.6036593 , 2456.5336593 , 2466.4536593 , 2476.3836593 , 2486.3036593 , 2496.2236593 }
% fwhm = { 9.8521 , 9.797 , 9.7441 , 9.6935 , 9.6451 , 9.599 , 9.5552 , 9.5136 , 9.4743 , 9.4373 , 9.4025 , 9.37 , 9.3397 , 9.3117 , 9.2859 , 9.2624 , 9.2412 , 9.2222 , 9.2055 , 9.1911 , 9.1789 , 9.1689 , 9.1613 , 9.1559 , 9.1527 , 9.1518 , 9.1532 , 9.1568 , 9.1627 , 9.1708 , 9.1813 , 9.1939 , 9.9085 , 9.8487 , 9.7987 , 9.7585 , 9.728 , 9.7073 , 9.6964 , 9.6952 , 9.7038 , 9.7222 , 9.7503 , 9.7883 , 9.8359 , 9.8934 , 9.9606 , 10.0375 , 10.1243 , 10.2208 , 10.3271 , 10.4431 , 10.5689 , 10.7045 , 10.8498 , 11.0049 , 11.1698 , 11.3444 , 11.5288 , 11.723 , 11.927 , 10.7815 , 9.7618 , 9.7601 , 9.7593 , 9.7596 , 9.7608 , 9.7631 , 9.7664 , 9.7706 , 9.7759 , 9.7822 , 9.7894 , 9.7977 , 9.807 , 9.8172 , 9.8285 , 9.8408 , 9.854 , 9.8683 , 9.8836 , 9.8998 , 9.9171 , 9.9354 , 9.9546 , 9.9749 , 9.9962 , 10.0184 , 10.0417 , 10.066 , 10.0913 , 10.1175 , 10.1448 , 10.1731 , 10.2024 , 10.2326 , 10.8383 , 10.8327 , 10.8272 , 10.8219 , 10.8167 , 10.8116 , 10.8067 , 10.802 , 10.7973 , 10.7928 , 10.7885 , 10.7842 , 10.7802 , 10.7762 , 10.7724 , 10.7687 , 10.7652 , 10.7618 , 10.7585 , 10.7554 , 10.7524 , 10.7496 , 10.7469 , 10.7443 , 10.7419 , 10.7396 , 10.7374 , 10.7354 , 10.7335 , 10.7317 , 10.7301 , 10.7287 , 10.7273 , 10.7261 , 10.7251 , 10.7241 , 10.7234 , 10.7227 , 10.7222 , 10.7218 , 10.7216 , 10.7215 , 10.7215 , 10.7217 , 10.722 , 10.7225 , 10.7231 , 10.7238 , 10.7246 , 10.7256 , 10.7268 , 10.7281 , 10.7295 , 10.731 , 10.7327 , 10.7345 , 10.7365 , 10.7386 , 10.7409 , 10.7432 , 10.7457 , 10.7484 , 10.7512 , 10.7541 , 11.1666 , 11.1579 , 11.1489 , 11.1396 , 11.1299 , 11.1199 , 11.1096 , 11.099 , 11.0881 , 11.0769 , 11.0653 , 11.0534 , 11.0413 , 11.0287 , 11.0159 , 11.0028 , 10.9893 , 10.9756 , 10.9615 , 10.9471 , 10.9323 , 10.9173 , 10.9019 , 10.8863 , 10.8703 , 10.854 , 10.8373 , 10.8204 , 10.8031 , 10.7856 , 10.7677 , 10.7494 , 10.7309 , 10.7121 , 10.6929 , 10.6734 , 10.6536 , 10.6335 , 10.6131 , 10.5924 , 10.5713 , 10.5499 , 10.5282 , 10.5062 , 10.4839 , 10.4612 , 10.4383 , 10.415 , 10.3914 , 10.3675 , 10.3433 , 10.3187 , 10.2938 , 10.2687 , 10.2432 , 10.2174 , 10.1912 , 10.1648 , 10.138 , 10.1109 , 10.0835 , 10.0558 , 10.0278 , 9.9994 }
% bbl = { 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 0.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 , 1.0 }
% y start = 1
% x start = 1
% 
% Band-interleaved-by-pixel: BIP format stores the first pixel for all bands in sequential order, 
% followed by the second pixel for all bands, followed by the third pixel for all bands, and so forth,
% interleaved up to the number of pixels. This format provides optimum performance for spectral (z) access of the image data.

%%%%%%%%%%%%%%%%%%%%%%CARGAR IMAGEN AVIRIS %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
clear all; clc;
bands=224;
samples = 813; % The number of samples (pixels) per image line for each band.
lines = 813; %18385; % The number of lines per image for each band.
[File,Path]=uigetfile({'*.*'},'Cargar Datos');
filename=strcat(Path,File);
fin=fopen(filename,'r');                    %Abrir el Archivo 
ndata= samples*lines*bands;
%OFFSET=  (bands*samples);
%STATUS = fseek(fin, OFFSET, 'bof');
data=fread(fin, ndata,'uint16');        
fclose(fin);                                %Cerrar el Archivo 



wavelength = [ 365, 375, 385, 394, 404, 414, 423, 433, 443, 453, 462, 472, 482, 491, 501,...
    511, 521, 530, 540, 550, 560, 569, 579, 589, 599, 608, 618, 628, 638, 647, 657, 667, 655,...
    665, 675, 684, 694, 704 , 714, 724, 733, 743, 753, 763, 772, 782, 792, 802, 811, 821, 831, 840, 850,...
    860, 870, 879, 889, 899, 908, 918, 928, 937, 947 , 957, 966, 976, 985, 995, 1005, 1014, 1024, 1034, 1043,...
    1053, 1062, 1072, 1082, 1091, 1101, 1110, 1120, 1129, 1139, 1148, 1158, 1168, 1177, 1187, 1196, 1206, 1215,...
    1225, 1234, 1244, 1253, 1263, 1253, 1263, 1273, 1283, 1293, 1303, 1313, 1323, 1333, 1343, 1353, 1363, 1373,...
    1382, 1392, 1402, 1412, 1422, 1432, 1442, 1452 , 1462, 1472, 1482, 1492, 1502, 1512, 1522, 1532, 1542, 1552 , 1562,...
    1572, 1582, 1592, 1602, 1612, 1622, 1632, 1642, 1652, 1662, 1672, 1682 , 1692, 1702, 1712, 1722 , 1732, 1742, 1752,...
    1762, 1772, 1782, 1792, 1802, 1811, 1821, 1831, 1841, 1851, 1861, 1871, 1872, 1866, 1876, 1887 , 1897, 1907, 1917, 1927,...
    1937, 1947, 1957, 1967, 1977, 1987, 1997, 2007, 2017, 2027, 2037, 2047, 2057, 2067, 2077, 2087, 2097, 2107, 2117, 2127,...
    2137, 2147, 2157, 2167, 2177 , 2187 , 2197 , 2207 , 2217 , 2227 , 2237 , 2247 , 2257 , 2267 , 2277 , 2287 , 2297 , 2307 ,...
    2317 , 2327 , 2337 , 2347 , 2357 , 2367 , 2377 , 2386 , 2396 , 2406 , 2416. , 2426 , 2436 , 2446 , 2456 , 2466 , 2476 , 2486 , 2496 ];


k=48;
dataToView=zeros(samples,lines);
for i=1:lines
    for j=1:samples
    dataToView(i,j)=data(1+(bands*(k-1)));
    k=k+1;
    end
end


rgbImg=imread(strcat(filename,'_RGB.jpeg'));
figure;
image(rgbImg(1:lines,:,:));
figure;
imagesc(dataToView);            %Mostrar Imagen





